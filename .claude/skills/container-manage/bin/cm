#!/usr/bin/env bash
# Container Management Tool (cm)
# Manages Tmux sessions for univers containers

set -e

# Color codes
RED='\\033[0;31m'
GREEN='\\033[0;32m'
YELLOW='\\033[1;33m'
BLUE='\\033[0;34m'
NC='\\033[0m'

# Print help
print_help() {
    cat << 'HELP'
Container Management Tool (cm)

Usage: cm <command> [options]

Commands:

  Tmux Management:
    tmux start              - Start all tmux sessions (desktop-view, mobile-view, etc)
    tmux stop               - Stop all tmux sessions
    tmux list              - List all tmux sessions
    tmux attach <session>  - Attach to tmux session
    tmux kill <session>    - Kill specific tmux session
    tmux windows <session> - List windows in session

  Help:
    help, --help, -h       - Show this help message
    version, --version     - Show version

Examples:
  cm tmux start                    # Start all tmux sessions
  cm tmux stop                     # Stop all tmux sessions
  cm tmux list                     # List all sessions
  cm tmux attach univers-mobile-view  # Attach to mobile-view session
  cm tmux windows univers-mobile-view # List windows in session

HELP
}

# Main command dispatcher
main() {
    local cmd="${1:-help}"
    shift || true

    case "$cmd" in
        tmux)
            tmux_command "$@"
            ;;
        help|--help|-h)
            print_help
            ;;
        version|--version)
            echo "Container Management Tool (cm) v1.2.0"
            ;;
        *)
            echo -e "${RED}Error: Unknown command '$cmd'${NC}"
            echo "Run 'cm help' for usage information"
            exit 1
            ;;
    esac
}

# Tmux management functions
tmux_command() {
    local subcmd="${1:-help}"
    shift || true

    case "$subcmd" in
        start)
            tmux_start
            ;;
        stop)
            tmux_stop_all
            ;;
        list)
            tmux_list
            ;;
        attach)
            tmux_attach "$1"
            ;;
        kill)
            tmux_kill "$1"
            ;;
        windows)
            tmux_windows "$1"
            ;;
        *)
            echo -e "${RED}Error: Unknown tmux command '$subcmd'${NC}"
            exit 1
            ;;
    esac
}

# Start all tmux sessions using tmux-manager
tmux_start() {
    local tmux_manager="/home/ubuntu/repos/univers-container/.claude/skills/tmux-manage/scripts/tmux-manager.sh"
    
    if [ ! -f "$tmux_manager" ]; then
        echo -e "${RED}Error: tmux-manager.sh not found${NC}"
        exit 1
    fi
    
    bash "$tmux_manager" start
}

# Stop all tmux sessions
tmux_stop_all() {
    local tmux_manager="/home/ubuntu/repos/univers-container/.claude/skills/tmux-manage/scripts/tmux-manager.sh"
    
    if [ ! -f "$tmux_manager" ]; then
        echo -e "${RED}Error: tmux-manager.sh not found${NC}"
        exit 1
    fi
    
    bash "$tmux_manager" stop-all
}

# List all tmux sessions
tmux_list() {
    echo -e "${BLUE}=== Tmux Sessions ===${NC}"
    if tmux list-sessions 2>/dev/null; then
        echo ""
        echo -e "${GREEN}Total: $(tmux list-sessions 2>/dev/null | wc -l) sessions${NC}"
    else
        echo -e "${YELLOW}No tmux sessions found${NC}"
    fi
}

# Attach to tmux session
tmux_attach() {
    local session="$1"
    
    if [ -z "$session" ]; then
        echo -e "${RED}Error: Session name required${NC}"
        exit 1
    fi
    
    if ! tmux has-session -t "$session" 2>/dev/null; then
        echo -e "${RED}Error: Session '$session' not found${NC}"
        exit 1
    fi
    
    tmux attach-session -t "$session"
}

# Kill specific tmux session
tmux_kill() {
    local session="$1"
    
    if [ -z "$session" ]; then
        echo -e "${RED}Error: Session name required${NC}"
        exit 1
    fi
    
    if tmux kill-session -t "$session" 2>/dev/null; then
        echo -e "${GREEN}âœ“ Session '$session' closed${NC}"
    else
        echo -e "${RED}Error: Session '$session' not found${NC}"
        exit 1
    fi
}

# List windows in a tmux session
tmux_windows() {
    local session="$1"
    
    if [ -z "$session" ]; then
        echo -e "${RED}Error: Session name required${NC}"
        exit 1
    fi
    
    echo -e "${BLUE}=== Windows in session '$session' ===${NC}"
    if tmux list-windows -t "$session" 2>/dev/null; then
        echo ""
    else
        echo -e "${RED}Error: Session '$session' not found${NC}"
        exit 1
    fi
}

# Run main function
main "$@"
